var http = require("http");
var https = require("https");
var URL = require("url");


function getUrlContent(url, callOptions, callback)
{
	if (callback == null && typeof callOptions == "function")
	{
		callback = callOptions;
		delete callOptions;
	}

	var urlData = URL.parse(url);

	if (urlData.protocol == "http:")
	{
		var parsedUrl = url.replace(/htt.*?\:\/\//, "");

		var urlParts = parsedUrl.split("/");
		var host = urlParts[0];
		var path = parsedUrl.replace(host, "");

		var body = "";
		var data = null;
		var bodyLength = 0;

		var client = http.createClient(80, host);

		var request = client.request('GET', path, {'host': host, 'user-agent': "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15"});

		request.on('response', 
			function (response) 
			{
				if (response.statusCode != "200")
				{
					console.log("ERROR in status code", response.statusCode)
				}
				response.setEncoding('utf8');
				response.on('data', 
					function (chunk) 
					{
						body += chunk;
	  				}
				);
				
				response.on("end",
					function()
					{
						callback(body);
					}
				)
			}
		);

		request.end();
	}
	else
	{
		
		var host = urlData.host;
		var path = urlData.pathname;
		
		var options = {
			host: host,
			path: path + "?" + urlData.query,
	        port: 443,
	        method: callOptions.method || "GET"
		}



		var body = "";
		var data = null;
		var bodyLength = 0;

		var client = http.createClient(4, host);

		var request = https.request(options, function(httpsRes) 
			{
				httpsRes.on('data', 
					function (chunk) 
					{
						body += chunk;
	  				}
				);

				httpsRes.on("end",
					function()
					{
						
						callback(body);
					}
				)
			}
		);
		
		if (options.params)
		{
			console.log(querystring.stringify(options.params))
			response.write(querystring.stringify(options.params));
		}
		
		request.end();
	
	}
}

exports.get = getUrlContent;